rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================
    // Helper Functions  
    // ========================================
    
    function isAuthenticated() {
      return request.auth != null && request.auth.token.email_verified == true;
    }
    
    function isOwner(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }
    
    function getUserEmail() {
      return request.auth.token.email;
    }
    
    // アプリ管理者かチェック
    function isAppAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/app_admins/$(request.auth.uid));
    }
    



    // ========================================
    // Users Collection
    // ========================================
    
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }

    // ========================================
    // Groups Collection
    // ========================================
    
    match /groups/{groupId} {
      allow read: if isAuthenticated() && 
        exists(/databases/$(database)/documents/groups/$(groupId)/members/$(getUserEmail()));

      allow write, create: if isAuthenticated() &&
        exists(/databases/$(database)/documents/groups/$(groupId)/members/$(getUserEmail())) &&
        get(/databases/$(database)/documents/groups/$(groupId)/members/$(getUserEmail())).data.role == 'admin';


      
      // 管理者サブコレクション
      match /members/{adminId} {
        allow read: if isAuthenticated() && (
          getUserEmail() == adminId
        );
        
        allow write: if isAuthenticated() && 
          exists(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.email)) &&
          get(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.email)).data.role == 'admin';

        // 最初の管理者登録（グループ作成者）
        allow create: if isAuthenticated() && request.auth.uid == adminId;
      }
    }


    // ========================================
    // App Admins Collection
    // ========================================
    
    match /app_admins/{adminId} {
      allow read: if isOwner(adminId);
      allow write: if isAppAdmin();
    }

    // ========================================
    // Default Deny All
    // ========================================
    
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 